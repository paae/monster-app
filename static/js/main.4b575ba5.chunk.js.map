{"version":3,"sources":["component/card/card.jsx","component/card-list/card-list-component.jsx","component/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","e","setState","target","value","fetch","then","res","json","result","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAceA,EAZF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACb,OAGE,sBAAKC,UAAU,kBAAf,UACA,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCODC,EAZE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEjB,OAEE,qBAAKP,UAAU,aAAf,SAECO,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCIVO,G,MAZG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAC9B,OAEE,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyCCG,E,4MAxCbC,MAAQ,CACNR,SAAS,GACTS,YAAY,I,EAchBL,aAAa,SAACM,GACZ,EAAKC,SAAS,CAACF,YAAYC,EAAEE,OAAOC,S,uDARtC,WAAoB,IAAD,OACnBC,MAAM,8CAELC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAM,SAAAG,GAAM,OAAG,EAAKP,SAAS,CAACX,SAAUkB,S,oBAOvC,WAAU,IAAD,EACsBC,KAAKX,MAA3BC,EADA,EACAA,YACDW,EAFC,EACYpB,SACaqB,QAAO,SAAA7B,GAAO,OAC5CA,EAAQK,KAAKyB,cAAcC,SAASd,EAAYa,kBAGlD,OACA,sBAAK7B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWU,YAAY,iBACvBC,aAAce,KAAKf,eAGnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GArCNI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b575ba5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css'\r\nconst Card = ({monster}) => {\r\n  return (\r\n \r\n\r\n    <div className=\"card-container \">\r\n    <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n    </div>\r\n  )\r\n    }\r\n \r\nexport default Card;","import React from 'react';\r\nimport './card-list.css'\r\nimport Card from './../card/card';\r\n\r\nconst CardList = ({monsters}) => {\r\n\r\n  return (\r\n\r\n    <div className=\"card-list \">\r\n    \r\n    {monsters.map((monster)=>(\r\n      <Card key={monster.id} monster={monster}/>\r\n    ))}</div>\r\n    );\r\n} \r\n \r\nexport default CardList;","import React from 'react';\r\nimport './search-box.css'\r\n\r\nconst SearchBox = ({placeholder,handleChange}) => {\r\n  return ( \r\n    \r\n    <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n/>\r\n   );\r\n}\r\n \r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport CardList from './component/card-list/card-list-component';\n\nimport SearchBox from './component/search-box/search-box';\n\nclass App extends Component {\n \n\n\n  state = { \n    monsters:[ ],\n    searchField:''\n  }\n\n \n \n//fetching data from api \n//api request\ncomponentDidMount(){\nfetch(\"https://jsonplaceholder.typicode.com/users\")\n\n.then(res =>res.json())\n.then (result=> this.setState({monsters: result}));\n}\n\nhandleChange=(e)=>{\n  this.setState({searchField:e.target.value})\n}\n  \n  render() { \n    const {searchField,monsters}=this.state\n    const filteredMonsters=monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return (  \n    <div className=\"App\">\n    <h1>monster Rolodex</h1>\n    <SearchBox placeholder=\"search monster\" \n    handleChange={this.handleChange}\n     />\n    \n    <CardList monsters={filteredMonsters}/>\n\n\n    </div>);\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}